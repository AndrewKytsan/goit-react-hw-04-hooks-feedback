{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/Section/Sections.module.scss","components/Buttons/Buttons.module.scss","components/Statistics/Statistics.jsx","components/Buttons/Buttons.jsx","components/Section/Sections.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","statTitle","stats","Buttons","btnName","onLeaveFeedback","button","onClick","type","Sections","title","children","section","mainTitle","App","useState","setGood","setNeutral","setBad","countTotalFeedback","onbtnClick","prevState","map","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,MAAQ,4B,gBCApED,EAAOC,QAAU,CAAC,QAAU,4B,iBCA5BD,EAAOC,QAAU,CAAC,OAAS,0B,6HCEZ,SAASC,EAAT,GAMX,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,mBAEA,OACI,gCACI,oBAAIC,UAAWC,IAAEC,UAAjB,wBACCJ,EACG,sBAAKE,UAAWC,IAAEE,MAAlB,UACI,uCAAUR,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,qDAAwBC,EAAxB,UAGJ,qD,oBCnBD,SAASK,EAAT,GAAgD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACvC,OACI,wBACIN,UAAWC,IAAEM,OACbC,QAAS,kBAAMF,EAAgBD,IAC/BI,KAAK,SAHT,SAKKJ,I,oBCPE,SAASK,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtC,OACI,sBAAKZ,UAAWC,IAAEY,QAAlB,UACI,oBAAIb,UAAWC,IAAEa,UAAjB,SAA6BH,IAC5BC,KCHE,SAASG,IACpB,MAAwBC,mBAAS,GAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOnB,EAAP,KAAYsB,EAAZ,KAEMC,EAAqB,WACvB,OAAOzB,EAAOC,EAAUC,GAOtBwB,EAAa,SAAAhB,GACf,OAAQA,GACJ,IAAK,OACDY,GAAQ,SAAAK,GAAS,OAAIA,EAAY,KACjC,MACJ,IAAK,UACDJ,GAAW,SAAAI,GAAS,OAAIA,EAAY,KACpC,MACJ,IAAK,MACDH,GAAO,SAAAG,GAAS,OAAIA,EAAY,KAChC,MACJ,QACI,SAIZ,OACI,eAACZ,EAAD,CAAUC,MAAM,wBAAhB,UACI,8BA3BQ,CAAC,OAAQ,UAAW,OA4BfY,KAAI,SAAAhB,GAAM,OACf,cAACH,EAAD,CAASC,QAASE,EAAQD,gBAAiBe,SAInD,cAAC3B,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,IACPrB,mBAhCDyB,KAAKC,MAAO9B,EAAOyB,IAAwB,U,MCT1DM,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACb,EAAD,MAEJc,SAASC,eAAe,W","file":"static/js/main.497b2a14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statTitle\":\"Statistics_statTitle__1qZ6B\",\"stats\":\"Statistics_stats__wmvxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sections_section__2OI3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Buttons_button__3qiQ0\"};","import s from './Statistics.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n    good,\r\n    neutral,\r\n    bad,\r\n    total,\r\n    positivePercentage,\r\n}) {\r\n    return (\r\n        <div>\r\n            <h2 className={s.statTitle}>Statistics</h2>\r\n            {total ? (\r\n                <div className={s.stats}>\r\n                    <p>Good: {good}</p>\r\n                    <p>Neutral: {neutral}</p>\r\n                    <p>Bad: {bad}</p>\r\n                    <p>Total: {total}</p>\r\n                    <p>Positive feedbacks: {positivePercentage}%</p>\r\n                </div>\r\n            ) : (\r\n                <p>No feedback given</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Buttons.module.scss';\r\n\r\nexport default function Buttons({ btnName, onLeaveFeedback }) {\r\n    return (\r\n        <button\r\n            className={s.button}\r\n            onClick={() => onLeaveFeedback(btnName)}\r\n            type=\"button\"\r\n        >\r\n            {btnName}\r\n        </button>\r\n    );\r\n}\r\n\r\nButtons.propTypes = {\r\n    nameBtn: PropTypes.string.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Sections.module.scss';\r\n\r\nexport default function Sections({ title, children }) {\r\n    return (\r\n        <div className={s.section}>\r\n            <h1 className={s.mainTitle}>{title}</h1>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nSections.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n","import Statistics from './components/Statistics/Statistics';\nimport Buttons from './components/Buttons/Buttons';\nimport Sections from './components/Section/Sections';\nimport { useState } from 'react';\nexport default function App() {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n    const buttons = ['good', 'neutral', 'bad'];\n    const countTotalFeedback = () => {\n        return good + neutral + bad;\n    };\n\n    const countPositiveFeedbackPercentage = () => {\n        return Math.round((good / countTotalFeedback()) * 100);\n    };\n\n    const onbtnClick = btnName => {\n        switch (btnName) {\n            case 'good':\n                setGood(prevState => prevState + 1);\n                break;\n            case 'neutral':\n                setNeutral(prevState => prevState + 1);\n                break;\n            case 'bad':\n                setBad(prevState => prevState + 1);\n                break;\n            default:\n                return;\n        }\n    };\n\n    return (\n        <Sections title=\"Please leave feedback\">\n            <div>\n                {buttons.map(button => (\n                    <Buttons btnName={button} onLeaveFeedback={onbtnClick} />\n                ))}\n            </div>\n\n            <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={countTotalFeedback()}\n                positivePercentage={countPositiveFeedbackPercentage()}\n            />\n        </Sections>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}